<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <PublishAot>true</PublishAot>
        <InvariantGlobalization>true</InvariantGlobalization>
    </PropertyGroup>

    <PropertyGroup>
        <!-- OS detection -->
        <IsWindows Condition="'$([MSBuild]::IsOSUnixLike())' != 'true'">true</IsWindows>
        <IsWindows Condition="'$(IsWindows)' == ''">false</IsWindows>
        <IsUnix Condition="'$([MSBuild]::IsOSUnixLike())' == 'true'">true</IsUnix>
        <IsUnix Condition="'$(IsUnix)' == ''">false</IsUnix>
        
        <!-- Path configurations based on OS -->
        <DotNetToolsDirectory Condition="$(IsUnix)">$(HOME)/.dotnet/tools</DotNetToolsDirectory>
        <DotNetToolsDirectory Condition="$(IsWindows)">$(USERPROFILE)\.dotnet\tools</DotNetToolsDirectory>
        <PathSeparator Condition="$(IsWindows)">\</PathSeparator>
        <PathSeparator Condition="$(IsUnix)">/</PathSeparator>
    </PropertyGroup>

    <!-- Copy the executable to the .NET tools directory using symbolic links -->
    <Target Name="CopyToDotNetTools" AfterTargets="PostBuildEvent"
        Condition="'$(Configuration)' == 'Release'">
        <!-- Define source and destination -->
        <PropertyGroup>
            <SourceExe>$(MSBuildProjectDirectory)$(PathSeparator)$(OutputPath)$(AssemblyName)$(IsWindows ? '.exe' : '')</SourceExe>
            <DestExe>$(DotNetToolsDirectory)$(PathSeparator)$(AssemblyName)$(IsWindows ? '.exe' : '')</DestExe>
        </PropertyGroup>

        <!-- Windows implementation using symbolic link -->
        <Exec Command="if exist &quot;$(DestExe)&quot; del &quot;$(DestExe)&quot; &amp; mklink &quot;$(DestExe)&quot; &quot;$(SourceExe)&quot;"
              Condition="$(IsWindows)" ContinueOnError="true" />
        <Exec Command="if not exist &quot;$(DestExe)&quot; mklink &quot;$(DestExe)&quot; &quot;$(SourceExe)&quot;"
              Condition="$(IsWindows)" ContinueOnError="true" />
              
        <!-- Unix implementation using symbolic link -->
        <Exec Command="rm -f &quot;$(DestExe)&quot; &amp;&amp; ln -sf &quot;$(SourceExe)&quot; &quot;$(DestExe)&quot;"
              Condition="$(IsUnix)" />
    </Target>

</Project>